база = Новый ФайловаяБазаДанных
база.Открыть("/data/gonclub.db")

// инициируем таблицу, если ее еще нет
тр = база.НачатьТранзакцию(Истина)
тр.Таблица("Дружочки")
тр.Таблица("ИндексДружков")
тр.Таблица("Клубы")
тр.Таблица("Участники")
тр.Таблица("ИндексКлубов")
тр.ЗафиксироватьТранзакцию()

Функция Свертка(значение)
	Возврат Хэш(Формат("%v", значение))
КонецФункции

Функция ГенерацияПеченьки(значение)
	Возврат {"Заголовки": {"Set-Cookie": Формат("kuka=%v:%s", значение, Свертка(значение))}}
КонецФункции


Функция оо(ошибка)
	Возврат Строка({"ошибка": ошибка})
КонецФункции


Функция йессир(да)
	Возврат Строка({"данные": да})
КонецФункции


Функция айдиизпеч(вх)
	кук = вх.Заголовок("Cookie")
	Если кук = "" Тогда 
		Возврат ""
	КонецЕсли
	инд = СтрНайти(кук, "=")
	Если инд = -1 Тогда
		Возврат ""
	КонецЕсли
	кук = кук[инд+1:]
	инд = СтрНайти(кук, ":")
	Если инд = -1 Тогда
		Возврат ""
	КонецЕсли
	ид = кук[:инд]
	хш = кук[инд+1:]
	Если Свертка(ид) = хш Тогда 
		Возврат ид
	КонецЕсли
	Возврат ""
КонецФункции


Функция СтатическиеФайлы(вых,вх)
	путь = вх.Путь()
	путь, нетошибки = стрдекодироватьзапрос(путь)
	Если нетошибки = Ложь Тогда 
		вых.Отправить({"Статус":400, "Тело": "Плохой запрос"})
		Возврат
	КонецЕсли
	Если путь = "/" Тогда
	    путь = "/index.html"
	КонецЕсли

	путь = путь[1:]
	контент, нетошибки = прочитатьфайл("static/" + путь)
	Если нетошибки = Истина Тогда  
		вых.Отправить({"Статус":200, "Тело": Строка(контент)})
	Иначе
		вых.Отправить({"Статус":404, "Тело": "Страница не найдена"})		
	КонецЕсли
КонецФункции

Функция ДобавитьДружочка(база, дружочек)
	тр = база.НачатьТранзакцию(Истина)
    Попытка
        таб = тр.Таблица("Дружочки")
        дружочек.ид = Формат("%09d",таб.СледующийИдентификатор())
        таб.Установить(дружочек.имя, Строка(дружочек))
        таб = тр.Таблица("ИндексДружков")
        таб.Установить(дружочек.ид, дружочек.имя)
        тр.ЗафиксироватьТранзакцию()
    Исключение
        тр.ОтменитьТранзакцию()
        Возврат {}
    КонецПопытки
	Возврат дружочек
КонецФункции

Функция НайтиДружочка(база, имя)
	тр = база.НачатьТранзакцию(Ложь)
    таб = тр.Таблица("Дружочки")
    дружочек, хор = таб.Получить(имя)
    тр.ОтменитьТранзакцию()
    Если хор = Ложь Тогда
    	возврат {}
    КонецЕсли
    Возврат Структура(дружочек)
КонецФункции

Функция ИмяДружочка(база, айди)
	тр = база.НачатьТранзакцию(Ложь)
	таб = тр.Таблица("ИндексДружков")
	дружочек, хор = таб.Получить(айди)
	тр.ОтменитьТранзакцию()
	Если хор = Ложь Тогда
    	возврат ""
    КонецЕсли
    Возврат Строка(дружочек)
КонецФункции

Функция СоздатьКлуб(база, клуб, идавт)
	автор = ИмяДружочка(база, идавт)
	Если автор = "" Тогда
		Возврат {}
	КонецЕсли
	клуб.босс = автор
	тр = база.НачатьТранзакцию(Истина)
    Попытка
        таб = тр.Таблица("Клубы")
        клуб.ид = Формат("%09d",таб.СледующийИдентификатор())
        таб.Установить(клуб.ид, Строка(клуб))
        таб = тр.Таблица("Участники")
        таб.Установить(Формат("%s:%s", клуб.ид, идавт), автор)
        таб = тр.Таблица("ИндексКлубов")
        таб.Установить(Формат("%s:%s",идавт, клуб.ид), клуб.ид)
        тр.ЗафиксироватьТранзакцию()
    Исключение
        тр.ОтменитьТранзакцию()
        Возврат {}
    КонецПопытки
    Возврат клуб
КонецФункции

Функция ВступитьВКлуб(база, клубид, дид)
	др = ИмяДружочка(база, дид)
	Если др = "" Тогда
		Возврат Ложь
	КонецЕсли
	тр = база.НачатьТранзакцию(Истина)
    Попытка
        таб = тр.Таблица("Участники")
        таб.Установить(Формат("%s:%s", клубид, дид), др)
        таб = тр.Таблица("ИндексКлубов")
        таб.Установить(Формат("%s:%s",дид, клубид), клубид)
        тр.ЗафиксироватьТранзакцию()
    Исключение
        тр.ОтменитьТранзакцию()
        Возврат Ложь
    КонецПопытки
    Возврат Истина
КонецФункции

Функция НайтиКлуб(база, клубайди)
	тр = база.НачатьТранзакцию(Ложь)
	таб = тр.Таблица("Клубы")
	клуб, хор = таб.Получить(клубайди)
	тр.ОтменитьТранзакцию()
	Если хор = Ложь Тогда
    	Возврат {}
    КонецЕсли
    Возврат Структура(клуб)
КонецФункции

Функция НайтиУчастников(база, клубайди)
	тр = база.НачатьТранзакцию(Ложь)
	таб = тр.Таблица("Участники")
	участники = таб.ПолучитьПрефикс(клубайди)
	тр.ОтменитьТранзакцию()
	хлопчики = ['',]
    Для каждого х из участники.Значения() Цикл
    	хлопчики += х
	КонецЦикла
	Возврат хлопчики
КонецФункции

Функция КлубыДружка(база, дид)
	тр = база.НачатьТранзакцию(Ложь)
	таб = тр.Таблица("ИндексКлубов")
	клубыизбазы = таб.ПолучитьПрефикс(дид)
	тр.ОтменитьТранзакцию()
	клубы = [{"босс":"","ид":"","название":""}]
	тр = база.НачатьТранзакцию(Ложь)
	таб = тр.Таблица("Клубы")
    Для каждого х из клубыизбазы.Значения() Цикл
		клуб, хор = таб.Получить(х)
		клуб = Структура(клуб)
		Если хор = Истина Тогда 
			клубы += {"ид": клуб.ид, "название": клуб.название, "босс": клуб.босс}
		КонецЕсли
	КонецЦикла
	тр.ОтменитьТранзакцию()
	Возврат клубы
КонецФункции


Функция Регистрация(вых, вх)
	база = вх.Данные()
	сообщ = вх.Сообщение()
	данныеДружка = Структура(сообщ["Тело"])
	
	Если данныеДружка.имя = "" или данныеДружка.пароль = "" Тогда
		вых.Отправить({"Статус":412, "Тело": оо("Плохие данные")})		
		Возврат
	КонецЕсли

	Если НайтиДружочка(база, данныеДружка.имя) <> {} Тогда
		вых.Отправить({"Статус":412, "Тело": оо("Такой дружок-пирожок уже есть")})
		Возврат
	КонецЕсли	

	дружок = ДобавитьДружочка(база, данныеДружка)
	Если дружок = {} Тогда
		вых.Отправить({"Статус":500, "Тело": оо("Чет не пошло")})		
		Возврат
	КонецЕсли
	вых.Отправить({"Статус":200, 
		"Тело": йессир("Флекс"), 

	} + ГенерацияПеченьки(дружок.ид))
КонецФункции

Функция Вход(вых, вх)
	база = вх.Данные()
	сообщ = вх.Сообщение()
	данныеДружка = Структура(сообщ["Тело"])
	Если данныеДружка.имя = "" или данныеДружка.пароль = "" Тогда
		вых.Отправить({"Статус":412, "Тело": оо("Плохие данные")})		
		Возврат
	КонецЕсли

	дружок = НайтиДружочка(база, данныеДружка.имя)
	кук = ГенерацияПеченьки(дружок.ид)
	Если дружок = {} или дружок.пароль <> данныеДружка.пароль Тогда
		вых.Отправить({"Статус":412, "Тело": оо("Нет такого дружка")} + кук)
	КонецЕсли

	вых.Отправить({"Статус":200, 
		"Тело": йессир("Флекс"),
	} + кук)
КонецФункции

Функция СоздатьКлубКонтр(вых, вх)
	база = вх.Данные()
	ид = айдиизпеч(вх)
	Если ид = "" Тогда 
		вых.Отправить({"Статус":401, "Тело": оо("фак йу")})		
		Возврат
	КонецЕсли
	сообщ = вх.Сообщение()
	дк = Структура(сообщ["Тело"])
	Если дк.название = "" Тогда 
		вых.Отправить({"Статус":412, "Тело": оо("у клуба должно быть название")})
		Возврат
	КонецЕсли
	кпров = ""
	Если дк.профессия != "" Тогда
		кпров = 'ок = СтрСодержит(профессия, "' + дк.профессия + '")'
	ИначеЕсли дк.пароль != "" Тогда
		кпров = 'если СтрЗаменить(пароль, "' + дк.пароль + '", "") = "" тогда ок = Истина конецесли'
	Иначе
		вых.Отправить({"Статус":412, "Тело": оо("у клуба должен быть пароль или профессия")})
		Возврат
	КонецЕсли

	клуб = {"название": дк.название, "кпров": кпров}
	
	к = СоздатьКлуб(база, клуб, ид)
	Если к = {} Тогда
		вых.Отправить({"Статус":500, "Тело": оо("Чет не пошло")})		
		Возврат
	КонецЕсли
	вых.Отправить({"Статус":200, "Тело": Строка(к)})
КонецФункции

Функция ВсеПроКлуб(вых, вх)
	база = вх.Данные()
	ид = айдиизпеч(вх)
	Если ид = "" Тогда 
		вых.Отправить({"Статус":401, "Тело": оо("фак йу")})		
		Возврат
	КонецЕсли
	клид = вх.Параметр("клид")

	клуб = НайтиКлуб(база, клид)
	Если клуб = {} Тогда 
		вых.Отправить({"Статус":404, "Тело": оо("тобой выбрана неправильная дверь")})		
		Возврат
	КонецЕсли

	др = ИмяДружочка(база, ид)
	Если др = "" Тогда 
		вых.Отправить({"Статус":401, "Тело": оо("фак йу")})		
		Возврат
	КонецЕсли

	правильнаяДверь = Ложь
	хлопчики = НайтиУчастников(база, клид)
	Для каждого х из хлопчики Цикл
		Если х = др Тогда 
		    правильнаяДверь = Истина 
		 КонецЕсли
	КонецЦикла

	Если правильнаяДверь = Ложь Тогда
		вых.Отправить({"Статус":403, "Тело": оо("тобой выбрана неправильная дверь")})
	КонецЕсли

	клуб.участники = хлопчики
	вых.Отправить({"Статус":200, "Тело": Строка(клуб)})
КонецФункции

Функция МоиКлубы(вых, вх)
	база = вх.Данные()
	ид = айдиизпеч(вх)
	Если ид = "" Тогда 
		вых.Отправить({"Статус":401, "Тело": оо("фак йу")})		
		Возврат
	КонецЕсли
	клубы = КлубыДружка(база, ид)
	вых.Отправить({"Статус":200, "Тело": Строка(клубы)})
КонецФункции

Функция ПопробоватьВступитьВКлуб(вых, вх)
	база = вх.Данные()
	ид = айдиизпеч(вх)
	Если ид = "" Тогда 
		вых.Отправить({"Статус":401, "Тело": оо("фак йу")})		
		Возврат
	КонецЕсли

	профессия = ИмяДружочка(база, ид)
	Если профессия = "" Тогда 
		вых.Отправить({"Статус":401, "Тело": оо("фак йу")})		
		Возврат
	КонецЕсли
	сообщ = вх.Сообщение()
	явки = Структура(сообщ["Тело"])

	клуб = НайтиКлуб(база, явки.клуб)
	Если клуб = {} Тогда 
		вых.Отправить({"Статус":404, "Тело": оо("тобой выбрана неправильная дверь")})		
		Возврат
	КонецЕсли
	
	пароль = явки.пароль
	клуб.кпров = СтрЗаменить(клуб.кпров, "профессия", '"' + профессия + '"')
	клуб.кпров = СтрЗаменить(клуб.кпров, "пароль", '"' + пароль + '"')
	Выполнить(клуб.кпров)
	Если ок = Истина Тогда 
		Если ВступитьВКлуб(база, клуб.ид, ид) = Истина Тогда 
			вых.Отправить({"Статус":200, "Тело": йессир("флекс")})
		Иначе
			вых.Отправить({"Статус":500, "Тело": оо("чет не пошло")})
		КонецЕсли
	Иначе
		вых.Отправить({"Статус":403, "Тело": оо("тобой выбрана неправильная дверь")})
	КонецЕсли
КонецФункции

Функция ПоследниеКлубы(вых, вх)
	база = вх.Данные()
	тр = база.НачатьТранзакцию(Истина)
	таб = тр.Таблица("Клубы")
	стартч = таб.СледующийИдентификатор() - 50
	конецч = стартч + 49
	тр.ОтменитьТранзакцию()

	тр = база.НачатьТранзакцию(Ложь)
	таб = тр.Таблица("Клубы")
	
	конецф = Формат("%09d", конецч)
	стартф = Формат("%09d", стартч)

	инфа = таб.ПолучитьДиапазон(стартф,конецф)
	
	тр.ОтменитьТранзакцию()
	клубы = []
	Для каждого к из инфа.Значения() Цикл
		к = Структура(к)
        клубы += {"ид":к.ид, "название": к.название, "босс": к.босс}
	КонецЦикла
	вых.Отправить({"Статус":200, "Тело": Строка(клубы)})
КонецФункции


серв = Новый Сервер
Попытка
    серв.Открыть("http", ":9990", 100, {
        "/": СтатическиеФайлы,
        "/zaregatsya": Регистрация,
        "/vhod": Вход,
		"/novklub": СоздатьКлубКонтр,
        "/klybi": ПоследниеКлубы,
		"/vstupit": ПопробоватьВступитьВКлуб,
		"/moikluby": МоиКлубы,
		"/chezaklub": ВсеПроКлуб,
    }, база)
    Сообщить("Запущен сервер приложения 'ГонКлаб' на порту 9990")
Исключение
    Сообщить(ОписаниеОшибки())
КонецПопытки

кнл = Новый Канал(0)
Пока серв.Работает() Цикл
    _ = <- кнл
КонецЦикла
